kind: Namespace
apiVersion: v1
metadata:
  name: connect-ns
  labels:
    name: connect-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-depl
  namespace: connect-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: semirm/gateway:1
          ports:
            - containerPort: 8000
          args: [
            "-offer_uri=offer-clusterip-svc:8081",
            "-condition_uri=condition-clusterip-svc:8082",
            "-usr=default", "-pwd=default"
          ]
          resources:
            limits:
              cpu: 500m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-clusterip-svc
  namespace: connect-ns
spec:
  type: ClusterIP
  selector:
    app: gateway
  ports:
    - protocol: "TCP"
      port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress-svc
  namespace: connect-ns
spec:
  # tls:
  # - hosts:
  #   - gateway.com
  #   secretName: tls-secret
  rules:
    - host: gateway.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway-clusterip-svc
                port:
                  number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-loadbalancer
  namespace: connect-ns
spec:
  type: LoadBalancer
  selector:
    app: gateway
  ports:
  - port: 80
    targetPort: 8000
  # always redirect traffic to pod on a node where connection was initialized!!
  # use with caution! traffic will never be redirected to other nodes!!
  # also client's IP should remain same, because no additional network (node) hop happens
  externalTrafficPolicy: Local
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: connect-ns
stringData:
  key: |
    -----BEGIN RSA PRIVATE KEY-----
    
    -----END RSA PRIVATE KEY-----
  cert: |
    -----BEGIN CERTIFICATE-----
    
    -----END CERTIFICATE-----
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/eksctl-irptest-addon-iamsa-default-my-serviceaccount-Role1-UCGG6NDYZ3UE
  name: my-serviceaccount
  namespace: default
