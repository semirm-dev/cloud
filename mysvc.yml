kind: Namespace
apiVersion: v1
metadata:
  name: connect-ns
  labels:
    name: connect-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-depl
  namespace: connect-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: semirm/gateway:1
          ports:
            - containerPort: 8000
          args: [
            "-offer_uri=offer-clusterip-svc:8081",
            "-condition_uri=condition-clusterip-svc:8082",
            "-usr=default", "-pwd=default"
          ]
          resources:
            limits:
              cpu: 500m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-clusterip-svc
  namespace: connect-ns
spec:
  type: ClusterIP
  selector:
    app: gateway
  ports:
    - protocol: "TCP"
      port: 8000
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress-svc
  namespace: connect-ns
spec:
  # tls:
  # - hosts:
  #   - gateway.com
  #   secretName: tls-secret
  rules:
    - host: gateway.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway-clusterip-svc
                port:
                  number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-loadbalancer
  namespace: connect-ns
spec:
  type: LoadBalancer
  selector:
    app: gateway
  ports:
  - port: 80
    targetPort: 8000
  # always redirect traffic to pod on a node where connection was initialized!!
  # use with caution! traffic will never be redirected to other nodes!!
  # also client's IP should remain same, because no additional network (node) hop happens
  externalTrafficPolicy: Local


# - LoadBalancer service requires its own load balancer and publich IP, n services = n load balancers + public IPs
# If we have one api gateway to expose, it might be enough. But if we have multiple api gateways, we might want to use Ingress.
# - Ingress requires only one, host and path is used to forward traffic to different services, n services = 1 Ingress (load balancer + IP)
# Multiple hosts (foo.example.com and bar.example.com) should/could point to same Ingress Controller IP - this is the difference from LoadBalancer
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: connect-ns
stringData:
  key: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIEpAIBAAKCAQEApuOphmIKY/EqY+Ik8jEYZT81OgsRKAH8FUsc145I/47VrLjY
    r4GPt5SNkS5YuF8McYkjpjZPLLn2hpLvNeF1XXR7DQQ+eXDzJBGoQ2d9UBJeqPHZ
    L0Frr3BCKNYiqCaefu+RqqpPOdvG+MlU3hz6TID2duwW5qps96rKTbVME3ijOxyr
    nf57FnNAN0cVR/HwQo9dehnXWH3dfbEAsmadAVACTe+LlbNn3GJBjZW8X39vPsud
    SElUFC37CkC2NEZ/wKiNpUizQfHmHDafTDVFQh/65hP2uINUBJYHxRyprbrS0MXS
    7SRuVgxxFfuu5nU0TE1KlODS073hENiSUQpKIwIDAQABAoIBAQCf0/CKzmH9DP33
    4qBXgkVG0Z38FJU9p4jwK5tXpOCsPvLME8sRahdlTVO28pftGrokEZ6ek+yHfSFo
    CFgnVeC8u80Mzj+2tkFlDbQDuZz9jloxmkzRQOoMfood6dYPC81G69CpjamKU7ze
    jpJElaPwmKFxivDzv8vT9TEB8tsE2Tv7iFsv9my0EL7rOhxtzFXpIJrBbEkq8VIa
    VLrM0+nb/838tXOzhXC7e204nGN+Iko4P6k5QgqqVZcpchz2nyIXrxxAzhHvlq0L
    X1mLS7XdUySDQznQOqpZSmvS9NFNpU6mqobLJ6/TBOOgztFlG4ii83/8/mNJeLcu
    B0kiuw7hAoGBANWSg/tM9GAYGnPxNZyaIo4Pg51EqYcuZcR7/9fsoBSTsRS64Nb4
    4ZL3EtKk9jDfPD4xEKr8y5EUQjjuXQlSIcJad2OOJnpdTdfTCkdSaXY1+6AO+drf
    VCY93jfY7XRUg70l5f8+mRDNbxX6Qjp/XdVkBVae+aZyK3kX8KMV48VvAoGBAMgL
    BiKzSEeOYwgZ6llnPoXsaFsQMf7JtfVLV9ReRyI/R3iX2zrRBfUQuV09QmKncav+
    Zxjkg3CO2zmWlwRpKrEik9JuBLJzN0Ok5R/j2OOExYpXB5Y2t3sX9sisTuhUzKj+
    KHSn6Qz9yWVUuCglc7DQtIjAiwIgKiqZnafDRDSNAoGARvXicknUXGVFzMYVKQ4x
    cwAGm+dnaGnrGEiW7hhJ6+xShu+8qtCQqnL7Rw/WWNCjRIqq3hUWUgLoKeBQ+zrV
    yqyiRGrDsB52McKGBMKGFefDzh+LtsRDQl2GCwpBg0hdaShBbfhPhTysryGyhZsy
    Ayezel9h1YLTnO1uX9FzF3MCgYAdIb3a/9De2tWBMIT4UBjC2BK6cDlXqXheKIK5
    4qDpU93MqhC7GAWOEslr0qgARfI/4eSRs3WQxr0WPd/wPICDG037rxnwAudhanoT
    ktLbD1LVOqdYMM+3lV3TC4TSQMctNRYfJvTBd5QEtbm73vhiH4KrB582yAhb+9MB
    w2YDYQKBgQCGCucAXJ0dcbrRAuOcrdXXTybii3IKJD00SlGDMvTuPc815GyAmnMb
    D9+lBvBK18Yj53TXhHoxw8MW4xYlmg43srSpLATDp+k+JFF+6IsrhpocwS7oea0j
    /m6nddEgh+cWAb8TlZvbo/N4hKZPcRGC6xzEFxrO2B2aGC77dvilEw==
    -----END RSA PRIVATE KEY-----
  cert: |
    -----BEGIN CERTIFICATE-----
    MIIEWzCCA0OgAwIBAgICG/AwDQYJKoZIhvcNAQEFBQAwNDELMAkGA1UEBhMCVVMx
    DjAMBgNVBAoTBUNpc2NvMRUwEwYDVQQDEwxzZmNuZGVtby5jb20wHhcNMTIwMTAx
    MTIwMDAwWhcNMzQwOTAxMTIwMDAwWjA0MQswCQYDVQQGEwJVUzEOMAwGA1UEChMF
    Q2lzY28xFTATBgNVBAMTDHNmY25kZW1vLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD
    ggEPADCCAQoCggEBAKbjqYZiCmPxKmPiJPIxGGU/NToLESgB/BVLHNeOSP+O1ay4
    2K+Bj7eUjZEuWLhfDHGJI6Y2Tyy59oaS7zXhdV10ew0EPnlw8yQRqENnfVASXqjx
    2S9Ba69wQijWIqgmnn7vkaqqTznbxvjJVN4c+kyA9nbsFuaqbPeqyk21TBN4ozsc
    q53+exZzQDdHFUfx8EKPXXoZ11h93X2xALJmnQFQAk3vi5WzZ9xiQY2VvF9/bz7L
    nUhJVBQt+wpAtjRGf8CojaVIs0Hx5hw2n0w1RUIf+uYT9riDVASWB8Ucqa260tDF
    0u0kblYMcRX7ruZ1NExNSpTg0tO94RDYklEKSiMCAwEAAaOCAXUwggFxMDYGA1Ud
    EQQvMC2gKwYKKwYBBAGCNxQCA6AdDBtzZmNuZGVtby5jb21AKi5zZmNuZGVtby5j
    b20wDgYDVR0PAQH/BAQDAgKsMCcGA1UdJQQgMB4GCCsGAQUFBwMCBggrBgEFBQcD
    BAYIKwYBBQUHAwcwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUMiGRS4pqMaWf
    G4VQYfkVpl5s4DEwcgYJKoZIhvcNAQkPBGUwYzALBglghkgBZQMEASowCwYJYIZI
    AWUDBAEtMAsGCWCGSAFlAwQBFjALBglghkgBZQMEARkwCwYJYIZIAWUDBAECMAsG
    CWCGSAFlAwQBBTAKBggqhkiG9w0DBzAHBgUrDgMCBzBBBgkrBgEEAYI3FQoENDAy
    MAoGCCsGAQUFBwMCMAoGCCsGAQUFBwMEMAoGCCsGAQUFBwMHMAwGCisGAQQBgjcK
    AwQwFwYJKwYBBAGCNxQCBAoeCABVAHMAZQByMA0GCSqGSIb3DQEBBQUAA4IBAQBi
    5x9ag1VNaizbPnaIrcsXfxbkFAUza00ElB340GVrsEPdgTdSqU8J2lPBLab+8KqT
    3eIW+wb8vY4QexMHrK2zZeuYkv83Q+NgTHJcl51F2Sr1RT4Kd8G1KyPdKl57dzFj
    RHdVqGfsn4zBdp+qcp0oVPeza/H0NOg84I38N81gxYfxzuE4MetTfl4SFDWnZh9+
    u2I4Lt/i6CxZz/px8unCsXpMsAUF748T5cSVjhA+YOXAdzMRWVebVBLhG/6MiZpe
    37cNcK9OqFzbjvLWFIGOYSb1k8e9c81iJwoMHWAPj7q5OIBuMSh43DCS/sWvGyGt
    nSxu/3N+R/6vGIJBJPzj
    -----END CERTIFICATE-----